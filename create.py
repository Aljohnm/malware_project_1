import pandas as pd
import numpy as np

# Function to generate specified malware data based on defined ranges
def generate_malware_data(num_records, malware_type, feature_ranges):
    data = {
        "File Size (KB)": np.random.uniform(*feature_ranges["File Size (KB)"], num_records),
        "Network Traffic (KB/s)": np.random.uniform(*feature_ranges["Network Traffic (KB/s)"], num_records),
        "Memory Usage (MB)": np.random.uniform(*feature_ranges["Memory Usage (MB)"], num_records),
        "Battery Usage (%)": np.random.uniform(*feature_ranges["Battery Usage (%)"], num_records),
        "CPU Usage (%)": np.random.uniform(*feature_ranges["CPU Usage (%)"], num_records),
        "Malware Type": [malware_type] * num_records,
        
        "Process Count": np.random.randint(*feature_ranges["Process Count"], num_records),
        "Thread Count": np.random.randint(*feature_ranges["Thread Count"], num_records),
        "I/O Read Rate (MB/s)": np.random.uniform(*feature_ranges["I/O Read Rate (MB/s)"], num_records),
        "I/O Write Rate (MB/s)": np.random.uniform(*feature_ranges["I/O Write Rate (MB/s)"], num_records),
        
        "File Creation Time (Days ago)": np.random.uniform(*feature_ranges["File Creation Time (Days ago)"], num_records),
        "Last Access Time (Days ago)": np.random.uniform(*feature_ranges["Last Access Time (Days ago)"], num_records),
        "File Entropy": np.random.uniform(*feature_ranges["File Entropy"], num_records),
        
        "System Calls per Second": np.random.uniform(*feature_ranges["System Calls per Second"], num_records),
        "Registry Changes Count": np.random.randint(*feature_ranges["Registry Changes Count"], num_records),
        "File Modifications Count": np.random.randint(*feature_ranges["File Modifications Count"], num_records),
        
        "Error Log Count": np.random.randint(*feature_ranges["Error Log Count"], num_records),
        "Warning Log Count": np.random.randint(*feature_ranges["Warning Log Count"], num_records),
        
        "Source IP": ['.'.join(map(str, np.random.randint(0, 256, 4))) for _ in range(num_records)],
        "Destination IP": ['.'.join(map(str, np.random.randint(0, 256, 4))) for _ in range(num_records)],
        "Source Port": np.random.randint(1024, 65535, num_records),
        "Destination Port": np.random.randint(1024, 65535, num_records),
        "Protocol": np.random.choice(["TCP", "UDP"], num_records),
        
        "Admin Privileges Used": np.random.choice(["Yes", "No"], num_records),
        "File Write Permissions": np.random.choice(["Yes", "No"], num_records)
    }
    return pd.DataFrame(data)

# Define feature ranges for each malware type
malware_feature_ranges = {
    "Worm": {
        "File Size (KB)": (500, 4000),
        "Network Traffic (KB/s)": (1000, 5000),
        "Memory Usage (MB)": (100, 800),
        "Battery Usage (%)": (10, 80),
        "CPU Usage (%)": (50, 100),
        
        "Process Count": (50, 200),
        "Thread Count": (200, 500),
        "I/O Read Rate (MB/s)": (10, 40),
        "I/O Write Rate (MB/s)": (5, 30),
        
        "File Creation Time (Days ago)": (10, 3650),
        "Last Access Time (Days ago)": (1, 365),
        "File Entropy": (1.0, 6.0),
        
        "System Calls per Second": (1000, 5000),
        "Registry Changes Count": (100, 500),
        "File Modifications Count": (50, 400),
        
        "Error Log Count": (0, 50),
        "Warning Log Count": (0, 50)
    },
    "Spyware": {
        "File Size (KB)": (100, 3000),
        "Network Traffic (KB/s)": (500, 4000),
        "Memory Usage (MB)": (50, 600),
        "Battery Usage (%)": (5, 50),
        "CPU Usage (%)": (40, 90),
        
        "Process Count": (30, 150),
        "Thread Count": (100, 400),
        "I/O Read Rate (MB/s)": (5, 20),
        "I/O Write Rate (MB/s)": (5, 15),
        
        "File Creation Time (Days ago)": (50, 2500),
        "Last Access Time (Days ago)": (1, 180),
        "File Entropy": (1.0, 5.5),
        
        "System Calls per Second": (500, 4000),
        "Registry Changes Count": (50, 300),
        "File Modifications Count": (20, 200),
        
        "Error Log Count": (0, 20),
        "Warning Log Count": (0, 30)
    },
    "Ransomware": {
        "File Size (KB)": (1000, 6000),
        "Network Traffic (KB/s)": (500, 4500),
        "Memory Usage (MB)": (200, 1500),
        "Battery Usage (%)": (30, 90),
        "CPU Usage (%)": (70, 100),
        
        "Process Count": (100, 300),
        "Thread Count": (200, 600),
        "I/O Read Rate (MB/s)": (20, 60),
        "I/O Write Rate (MB/s)": (20, 60),
        
        "File Creation Time (Days ago)": (5, 3650),
        "Last Access Time (Days ago)": (1, 90),
        "File Entropy": (5.0, 8.0),
        
        "System Calls per Second": (1000, 6000),
        "Registry Changes Count": (200, 500),
        "File Modifications Count": (100, 500),
        
        "Error Log Count": (0, 60),
        "Warning Log Count": (0, 40)
    },
    "Trojan": {
        "File Size (KB)": (200, 4000),
        "Network Traffic (KB/s)": (100, 3000),
        "Memory Usage (MB)": (100, 800),
        "Battery Usage (%)": (10, 70),
        "CPU Usage (%)": (30, 80),
        
        "Process Count": (50, 250),
        "Thread Count": (100, 400),
        "I/O Read Rate (MB/s)": (10, 30),
        "I/O Write Rate (MB/s)": (5, 25),
        
        "File Creation Time (Days ago)": (50, 3000),
        "Last Access Time (Days ago)": (10, 365),
        "File Entropy": (2.0, 7.0),
        
        "System Calls per Second": (500, 3000),
        "Registry Changes Count": (50, 300),
        "File Modifications Count": (10, 200),
        
        "Error Log Count": (0, 40),
        "Warning Log Count": (0, 30)
    },
    "Adware": {
        "File Size (KB)": (100, 2500),
        "Network Traffic (KB/s)": (200, 2000),
        "Memory Usage (MB)": (50, 400),
        "Battery Usage (%)": (5, 50),
        "CPU Usage (%)": (20, 60),
        
        "Process Count": (30, 150),
        "Thread Count": (50, 250),
        "I/O Read Rate (MB/s)": (1, 15),
        "I/O Write Rate (MB/s)": (1, 10),
        
        "File Creation Time (Days ago)": (100, 3650),
        "Last Access Time (Days ago)": (30, 365),
        "File Entropy": (1.0, 4.0),
        
        "System Calls per Second": (300, 2000),
        "Registry Changes Count": (10, 100),
        "File Modifications Count": (5, 150),
        
        "Error Log Count": (0, 30),
        "Warning Log Count": (0, 20)
    }
}

# Function to generate complete dataset for all malware types
def generate_complete_dataset(num_records_per_malware):
    datasets = []
    for malware_type, ranges in malware_feature_ranges.items():
        data = generate_malware_data(num_records_per_malware, malware_type, ranges)
        datasets.append(data)
    return pd.concat(datasets, ignore_index=True)

# Generate 4000 records for training and 4000 for testing
train_data = generate_complete_dataset(800)  # 800 records per malware type for training
test_data = generate_complete_dataset(800)   # 800 records per malware type for testing

# Save the datasets to CSV files
train_data.to_csv('malware_train_data.csv', index=False)
test_data.to_csv('malware_test_data.csv', index=False)

print("Training and testing datasets generated successfully!")
